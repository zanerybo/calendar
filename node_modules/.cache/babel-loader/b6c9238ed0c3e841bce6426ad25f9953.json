{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.abramov\\\\calendar\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Calednar, { activeStartDate } from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport * as moment from \"moment\";\n\nconst ReactCalendar = () => {\n  const [date, setDate] = useState(new Date());\n  this.OnChange = this.OnChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n\n  const OnChange = event => {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  const OnClick = event => {\n    alert('Отправленное имя: ' + this.state.value);\n    event.preventDefault();\n  };\n\n  const onChange = date => {\n    setDate(date);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Calednar, {\n    onChange: onChange,\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), console.log(date), date.toString(), moment(date).format('DD.MM.YYYY'), console.log(date), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: OnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    onClick: OnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n};\n\nrender( /*#__PURE__*/React.createElement(ReactCalendar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 8\n  }\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Users/a.abramov/calendar/src/index.js"],"names":["React","useState","render","Calednar","activeStartDate","moment","ReactCalendar","date","setDate","Date","OnChange","bind","handleSubmit","event","setState","value","target","OnClick","alert","state","preventDefault","onChange","console","log","toString","format","document","querySelector"],"mappings":";AAAA,OAAQA,KAAR,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,QAAP,IAAkBC,eAAlB,QAAwC,gBAAxC;AACA,OAAO,kCAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAK;AACzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAA/B;AACA,OAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACE,OAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;;AACF,QAAMD,QAAQ,GAAGG,KAAK,IAAG;AACvB,SAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACD,GAFD;;AAGA,QAAME,OAAO,GAAGJ,KAAK,IAAG;AACtBK,IAAAA,KAAK,CAAC,uBAAuB,KAAKC,KAAL,CAAWJ,KAAnC,CAAL;AACAF,IAAAA,KAAK,CAACO,cAAN;AACD,GAHD;;AAIA,QAAMC,QAAQ,GAAGd,IAAI,IAAG;AACtBC,IAAAA,OAAO,CAACD,IAAD,CAAP;AAED,GAHD;;AAKA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEc,QAApB;AAA8B,IAAA,KAAK,EAAEd,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEJe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CAFI,EAGJA,IAAI,CAACiB,QAAL,EAHI,EAIJnB,MAAM,CAACE,IAAD,CAAN,CAAakB,MAAb,CAAoB,YAApB,CAJI,EAKJH,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CALI,eAML;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANK,eAOL;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,wDAA3B;AAAuC,IAAA,OAAO,EAAEO,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPK,CAAP;AASD,CAzBD;;AA6BAf,MAAM,eAAC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAoBwB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB,CAAN","sourcesContent":["import  React, { useState } from \"react\";\nimport {render} from \"react-dom\";\nimport Calednar, {activeStartDate} from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css'\nimport * as moment from \"moment\"\n\nconst ReactCalendar = () =>{\n  const [date,setDate] = useState(new Date());\n  this.OnChange = this.OnChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  const OnChange = event =>{\n    this.setState({value: event.target.value});\n  }\n  const OnClick = event =>{\n    alert('Отправленное имя: ' + this.state.value);\n    event.preventDefault();\n  }\n  const onChange = date =>{\n    setDate(date)\n    \n  }\n  \n  return <div>\n    <Calednar onChange={onChange} value={date} />\n    {console.log(date)}\n    {date.toString()}\n    {moment(date).format('DD.MM.YYYY')}\n    {console.log(date)}\n    <input type=\"text\" onChange={OnChange}/>     \n    <input type=\"submit\" value=\"Отправить\" onClick={OnClick}/>\n  </div>\n};\n\n\n\nrender(<ReactCalendar />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}